#ifndef DATAMODEL_H
#define DATAMODEL_H
#include<qglobal.h>

//#define uchar unsigned char

//激活校准
quint8 recalibrateCmd[16]={0x7B, 0xA0, 0x10,  0x00, 0x00, 0x00,  0x00, 0x00, 0x00,  0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0xCB};

/* 选择校准 */
quint8 modelCmd1[4][16]={ //一键模式
    {0x7B, 0xA6, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC},
    {0x7B, 0xA6, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCF},
    {0x7B, 0xA6, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE},
    {0x7B, 0xA6, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC9}
};

quint8 modelCmd2[4][16]={ //继电器轮流开关模式
    {0x7B, 0xA6, 0x01, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCD},
    {0x7B, 0xA6, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE},
    {0x7B, 0xA6, 0x03, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCF},
    {0x7B, 0xA6, 0x04, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8}
};

/* 校准 */
quint8 transCmd[4][6]={ //增益
    {0x01,  0x04,  0x04,  0x01,  0x04,  0x04 },
    {0x02,  0x04,  0x04,  0x01,  0x04,  0x07 },
    {0x03,  0x04,  0x04,  0x01,  0x04,  0x06 },
    {0x04 , 0x04,  0x04,  0x01,  0x04,  0x01 }
};

/*
quint8 phaseCmd[4][6]={ //相位
    {0x01,  0x05,  0x06,  0x01,  0x04,  0x07 },
    {0x02,  0x05,  0x06,  0x01,  0x04,  0x04 },
    {0x03,  0x05,  0x06,  0x01,  0x04,  0x05 },
    {0x04,  0x05,  0x06,  0x01,  0x04,  0x02 }
};*/

quint8 recvCmd[2][5] ={
   {0x04,  0xCC,  0xCC,  0xCC,  0xBB}, //增益应答Ok
   {0x05,  0xDD,  0xDD,  0xDD, 0xBB}   //相位应答Ok
};

//---------------------------
quint8 recalibrateBack[7]={0xA0 ,0x10 ,0xAA ,0xAA ,0xAA ,0xBB ,0xA1};

quint8 sentCmd[2][4] ={
    {0x04,  0x04,  0x01,  0x04},
    {0x05,  0x06,  0x01,  0x04}
};
//---------------------------


#endif // DATAMODEL_H
